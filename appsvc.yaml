swagger: '2.0'
info:
  description: |
    ## **http header**
    * **Contetnt-Type**: application/json;charset=UTF-8;
    * **Authorization**: **Basic** $API_KEY_ID:$API_KEY_SECRET
      * 可随便填两个字串，但是一定要带上，今后再来填正确的值

    ## **说明**
    * account是系统层面的，代表系统中一个账号，它有它自己的信息（比如电话，用户名，email），这些信息都强制保证在系统的唯一性，作为登录的凭证。
    * staff是业务逻辑中的一个对象，它也有他自己的信息（比如职位，科室，联系电话等等），这些信息就不必唯一（或是根据具体业务逻辑来限定是否唯一）。
    * account与staff一一对应，用account id进行关联。
    * 管理员创建账号，无需另外接口。使用POST /accounts?accessToken=xxx，就只需要传grant_type,phone/user_name,password即可
    * POST /accounts 时，grant_type选择phone，user_name，email其一，后面就只带其中一个参数，不是全部都填上

  version: 1.0.0
  title: Kalyke App Service
  contact:
    email: liqin323@gmail.com
host: 119.23.45.58
basePath: /v1
tags:
  - name: authentication
  - name: account
  - name: account role
schemes:
  - http
paths:
  /server/version:
    get:
      tags:
        - finish
      summary: 返回服务器版本，用于ping测试
      operationId: getServerVersion
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: "Return server name, version and build time"
          schema:
            type: object
            properties:
              svr_name:
                type: string
              svr_ver:
                type: string
              svr_build_time:
                type: string
        default:
          description: "Error code definitions"
          schema:
            $ref: '#/definitions/ErrorModel'
  /auth/accessTokens:
    post:
      tags:
        - authentication
      summary: Create an access token (login)
      operationId: createAccessToken
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - grant_type
            properties:
              grant_type:
                type: string
                default: phone
                enum:
                  - phone
                  - pv_code
                  - user_name
                  - email
                  - refresh_token
              password:
                type: string
              refresh_token:
                type: string
              phone:
                type: string
                description: If grant_type== "phone", it must be needed
              pv_code:
                type: string
                description: If grant_type== "pv_code", it must be needed
              user_name:
                type: string
                description: If grant_type== "user_name", it must be needed
              email:
                type: string
                description: If grant_type== "email", it must be needed
            example:
              grant_type: "phone"
              phone: "13688129904"
              password: "654321"
      responses:
        'default':
          description: ""
          schema:
            $ref: '#/definitions/ErrorModel'
        '201':
          description: Create access token successfully
          schema:
            type: object
            required:
              - access_token
              - expires_in
              - refresh_token
            properties:
              href:
                type: string
              account_id:
                type: string
              account_type:
                type: string
              access_token:
                type: string
              expires_in:
                type: integer
                format: int64
              refresh_token:
                type: string
          examples:
            application/json:
              href: "http://112.74.51.210:8090/v1/accounts/0"
              account_id: "0"
              account_type: "worker"
              access_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ"
              expires_in: 2147483647
              refresh_token: "IiwiYWRtaW4iOnRydWV9"
        '200':
          description: Refresh access token successfully
          schema:
            type: object
            required:
              - access_token
              - expires_in
              - refresh_token
            properties:
              access_token:
                type: string
              expires_in:
                type: integer
                format: int64
              refresh_token:
                type: string
          examples:
            application/json:
              href: "http://112.74.51.210:8090/v1/accounts/0"
              account_id: "0"
              account_type: "worker"
              access_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ"
              expires_in: 2147483647
              refresh_token: "IiwiYWRtaW4iOnRydWV9"
  /accounts:
    post:
      tags:
        - account
      summary: Create(Register) an account
      description: ''
      operationId: addAccount
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: type
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - grant_type
              - phone
              - pv_code
              - password
            properties:
              grant_type:
                type: string
                default: phone
                enum:
                  - phone
                  - user_name
                  - email
              password:
                type: string
              phone:
                type: string
                description: If grant_type== "phone", it must be needed
              pv_code:
                type: string
                description: If grant_type== "phone", it must be needed
              user_name:
                type: string
                description: If grant_type== "user_name", it must be needed
              email:
                type: string
                description: If grant_type== "email", it must be needed
            example:
              grant_type: "phone"
              phone: "13688129904"
              pv_code: "123456"
              password: "654321"
      responses:
        '201':
          description: Create account successfully
          schema:
            type: object
            required:
              - id
              - href
            properties:
              id:
                type: string
              href:
                type: string
          examples:
            application/json:
              id: "0"
              href: "http://112.74.51.210:8090/v1/accounts/0"
        'default':
          description: |
            * **10000**: ERR_UNEXPECTED
            * **1000**: ERR_AC_ALREADY_EXIST
            * **1001**: ERR_AC_PVCODE_INVALID
            * **1002**: ERR_AC_PVCODE_NOT_MATCH
            * **1003**: ERR_AC_PVCODE_EXPIRE
          schema:
            $ref: '#/definitions/ErrorModel'
  /accounts/phoneVerificationCodes:
    post:
      tags:
        - account
      summary: Create code of phone for verification
      operationId: createPVCode
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: accessToken
          description: |
            用户登录后，修改密码需带上, 即action == setPassword
          required: false
          type: string
        - in: body
          name: body
          description: ''
          required: true
          schema:
            type: object
            required:
              - phone
              - action
            properties:
              phone:
                type: string
                description: phone number
              action:
                type: string
                description: the action which the code is used for
                enum:
                  - register
                  - login
                  - setPassword
      responses:
        '201':
          description: Create verification code successfully
        'default':
          description: |
            * **10000**: ERR_UNEXPECTED
            * **1004**: ERR_PVCODE_INVALID_PHONE_NUMBER
            * **1005**: ERR_PVCODE_SEND_COUNT_EXCEED
            * **1006**: ERR_PVCODE_INVALID_INTERVAL
          schema:
            $ref: '#/definitions/ErrorModel'
  /accounts/passwords:
    post:
      tags:
        - account
      summary: Reset password of an account
      operationId: resetPswd
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: accessToken
          description: |
            用户登录后，修改密码需带上
          required: false
          type: string
        - in: body
          name: body
          description: ''
          required: true
          schema:
            type: object
            required:
              - phone
              - password
              - pv_code
            properties:
              phone:
                type: string
                description: phone number
              password:
                type: string
                description: new password
              pv_code:
                type: string
                description: phone verification code
      responses:
        '200':
          description: (Re)set password successfully
        'default':
          description: |
            * **10000**: ERR_UNEXPECTED
            * **1004**: ERR_PVCODE_INVALID_PHONE_NUMBER
            * **1005**: ERR_PVCODE_SEND_COUNT_EXCEED
            * **1006**: ERR_PVCODE_INVALID_INTERVAL
            * **1007**: ERR_PVCODE_NOT_MATCH
            * **1008**: ERR_PVCODE_EXPIRED
          schema:
            $ref: '#/definitions/ErrorModel'
  /accounts/{accountId}:
    get:
      tags:
        - account
      summary: Get an account information
      operationId: queryAccount
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: accountId
          description: ID of the account
          required: true
          type: string
        - in: query
          name: accessToken
          required: true
          type: string
      responses:
        '200':
          description: Get account by ID successfully
          schema:
            $ref: '#/definitions/AccountModel'
        'default':
          description: ''
          schema:
            $ref: '#/definitions/ErrorModel'
  /accounts/{accountId}/roles:
    get:
      tags:
        - account
      summary: Get roles of an account
      operationId: queryAccountRoles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: accountId
          description: ID of the account
          required: true
          type: string
        - in: query
          name: accessToken
          required: true
          type: string
      responses:
        '200':
          description: Get account's roles by account ID successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/RoleModel'
        'default':
          description: ''
          schema:
            $ref: '#/definitions/ErrorModel'
    post:
      tags:
        - account
      summary: Modify roles of an account
      operationId: modifyAccountRoles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: accountId
          description: ID of the account
          required: true
          type: string
        - in: query
          name: accessToken
          required: true
          type: string
        - in: body
          name: body
          description: ''
          required: true
          schema:
            type: object
            required:
              - roles
            properties:
              roles:
                type: array
                description: role IDs array
                items:
                  type: string
      responses:
        '200':
          description: Modify account's roles by account ID successfully
        'default':
          description: ''
          schema:
            $ref: '#/definitions/ErrorModel'
  /roles:
    get:
      tags:
        - role
      summary: Get all roles
      operationId: queryRoles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: accessToken
          required: true
          type: string
      responses:
        '200':
          description: Get all roles successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/RoleModel"
    post:
      tags:
        - role
      summary: Create a role
      operationId: createRole
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: accessToken
          required: true
          type: string
        - in: body
          name: body
          description: ''
          required: true
          schema:
            type: object
            required:
              - name
              - display_name
              - permissions
            properties:
              name:
                type: string
                description: the name of role
              display_name:
                type: string
                description: the display name of role
              description:
                type: string
                description: ''
              permissions:
                type: array
                description: permission id array
                items:
                  type: string
      responses:
        '201':
          description: Create role successfully
          schema:
            type: object
            required:
              - href
            properties:
              href:
                type: string
            example:
              href: "http://112.74.51.210:8090/v1/accounts/roles/0"
  /permissions:
    get:
      tags:
        - role
      summary: Get all permissions
      operationId: queryPermissions
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: accessToken
          required: true
          type: string
      responses:
        '200':
          description: Gey all permission for corporation
          schema:
            type: array
            items:
              $ref: '#/definitions/PermissionModel'
        'default':
          description: ''
          schema:
            $ref: '#/definitions/ErrorModel'
  /roles/{roleId}/permissions:
    get:
      tags:
        - role
      summary: Get permissions of a role
      operationId: getPermissionsRole
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: roleId
          required: true
          type: string
        - in: query
          name: accessToken
          required: true
          type: string
      responses:
        '200':
          description: Gey all permissions successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/PermissionModel'
        'default':
          description: ''
          schema:
            $ref: '#/definitions/ErrorModel'
    post:
      tags:
        - role
      summary: Modify permissions in a role
      operationId: modifyPermisionsRole
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: roleId
          required: true
          type: string
        - in: query
          name: accessToken
          required: true
          type: string
        - in: body
          name: body
          description: ''
          required: true
          schema:
            type: object
            required:
              - permissions
            properties:
              permissions:
                type: array
                description: permissiion IDs array
                items:
                  type: string
      responses:
        '200':
          description: Modify permissions sucessfully
        'default':
          description: ''
          schema:
            $ref: '#/definitions/ErrorModel'
  /roles/{roleId}/permissions/{permissionId}:
    delete:
      tags:
        - role
      summary: Remove a permission in a role
      operationId: deletePermisionRole
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: roleId
          required: true
          type: string
        - in: path
          name: permissionId
          required: true
          type: string
        - in: query
          name: accessToken
          required: true
          type: string
      responses:
        '200':
          description: Remove permission sucessfully
        'default':
          description: ''
          schema:
            $ref: '#/definitions/ErrorModel'
  /staff:
    get:
      tags:
        - staff
        - finish
      summary: 查询所有用户的非帐号相关资料(一般是与业务有关的信息)
      operationId: getAllStaff
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: accessToken
          required: true
          type: string
        - in: query
          name: offset
          required: true
          type: integer
        - in: query
          name: limit
          required: true
          type: integer
      responses:
        200:
          description: href列表
          schema:
            type: object
            properties:
              staff:
                type: array
                items:
                  type: string
        default:
          description: Error code definitions
          schema:
            $ref: '#/definitions/ErrorModel'
  /staff/{accountId}:
    get:
      tags:
        - staff
        - finish
      summary: 查询指定用户的非帐号相关资料,一般是与业务有关的信息.
      operationId: getStaff
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
        - in: query
          name: accessToken
          type: string
          required: true
      responses:
        200:
          description: 非帐号相关的用户资料
          schema:
            allOf:
              - $ref: '#/definitions/IdObject'
              - $ref: '#/definitions/StaffModel'
        default:
          description: Error code definitions
          schema:
            $ref: '#/definitions/ErrorModel'
    post:
      tags:
        - staff
        - finish
      summary: 设置指定用户的非帐号相关资料
      operationId: setStaff
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
        - in: query
          name: accessToken
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StaffModel'
      responses:
        200:
          description: 用户资料的href地址
          schema:
            $ref: '#/definitions/HrefObject'
        default:
          description: Error code definitions
          schema:
            $ref: '#/definitions/ErrorModel'
  /projects:
    get:
      tags:
        - project
        - finish
      summary: 查询项目列表
      operationId: getAllProjects
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: accessToken
          type: string
          required: true
        - in: query
          name: filter
          type: string
          required: true
          description: |
            搜索结果过滤,格式为:
              key1::value1,key2::value2,keyN,valueN
            例如:
              office::001,work_type::3
            提供的过滤key有:
            1.office  科室
            2.work_type 工作类型
            3.manager 负责人是此帐号id
            4.person  负责人或者成员包含此帐号id
        - in: query
          name: sort
          type: string
          required: true
          description: |
            搜索结果排序
              降序为"create_ts::-1"
              升序为"create_ts::1"
        - in: query
          name: totalOnly
          type: integer
          required: true
          description: |
             当totalOnly为1时,仅返回搜索结果记录的条数,此时仅respond的total有效.
             当totalOnly为0时,返回实际的搜索结果数据.此时respond的total字段无效.
        - in: query
          name: offset
          required: true
          type: integer
          description: 设定搜索结果的起始偏移
        - in: query
          name: limit
          required: true
          type: integer
          description: 当limit>0可用于分页,返回一个页数据量.当limit为-1时返回所有数据
      responses:
        200:
          description: 所有项目的href列表
          schema:
            $ref: '#/definitions/ProjectGetAllList'
        default:
          description: Error code definitions
          schema:
            $ref: '#/definitions/ErrorModel'
    post:
      tags:
        - project
        - finish
      summary: 创建项目
      operationId: createProject
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: accessToken
          type: string
          required: true
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProjectBasisModel'
      responses:
        200:
          description: Href of new project
          schema:
            $ref: '#/definitions/HrefObject'
        default:
          description: Error code definitions
          schema:
            $ref: '#/definitions/ErrorModel'
  /projects/workTypes:
    get:
      tags:
        - project
        - finish
      summary: 查询项目工作类型列表
      operationId: getWorkTypes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: accessToken
          required: true
          type: string
      responses:
        200:
          description: 所有项目的工作类型
          schema:
            type: object
            properties:
              work_types:
                type: array
                items:
                  $ref: '#/definitions/ProjectWorkType'
        default:
          description: Error code definitions
          schema:
            $ref: '#/definitions/ErrorModel'
  /projects/{projectId}:
    get:
      tags:
        - project
        - finish
      summary: Get Project By ID
      operationId: getProject
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: projectId
          type: string
          required: true
        - in: query
          name: accessToken
          required: true
          type: string
      responses:
        200:
          description: Detail information about selected project
          schema:
            allOf:
            - $ref: '#/definitions/IdObject'
            - $ref: '#/definitions/ProjectDetailModel'
        default:
          description: Error code definitions
          schema:
            $ref: "#/definitions/ErrorModel"
  /projects/{projectId}/status:
    post:
      tags:
        - project
        - finish
      summary: 更新项目的进度状态
      operationId: setProgress
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: projectId
          required: true
          type: string
        - in: query
          name: accessToken
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProjectStatus'
      responses:
        200:
          description: 项目进度更新成功,返回项目的href
          schema:
            $ref: '#/definitions/HrefObject'
        default:
          description: Error code definitions
          schema:
            $ref: "#/definitions/ErrorModel"
  /projects/{projectId}/application:
    post:
      tags:
        - project
        - finish
      summary: 项目信息更新:申报评审相关
      operationId: setProjectApplication
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: projectId
          required: true
          type: string
        - in: query
          name: accessToken
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProjectApplicationModel'
      responses:
        200:
          description: 更新后项目的href
          schema:
            $ref: '#/definitions/HrefObject'
        default:
          description: Error code definitions
          schema:
            $ref: '#/definitions/ErrorModel'
  /projects/{projectId}/team:
    post:
      tags:
        - project
        - finish
      summary: 项目数据更新:负责人与执行成员
      operationId: setProjectMembers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: projectId
          type: string
          required: true
        - in: query
          name: accessToken
          type: string
          required: true
        - in: body
          name: body
          schema:
            type: object
            properties:
              manager:
                description: 负责人
                type: string
              members:
                description: 组员id
                type: array
                items:
                  type: string
      responses:
        200:
          description: 返回项目href
        default:
          description: Error code definitions
          schema:
            $ref: '#/definitions/ErrorModel'
  /projects/{projectId}/tasks:
    post:
      tags:
        - project
        - task
        - finish
      summary: 项目数据更新:任务划分
      operationId: setProjectTasks
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: projectId
          required: true
          type: string
        - in: query
          name: accessToken
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              tasks:
                description: 任务列表
                type: array
                items:
                  type: object
                  properties:
                    name:
                      description: 任务名称
                      type: string
                    content:
                      description: 任务描述
                      type: string
                    assign_to:
                      description: 任务负责人
                      type: string
                    executors:
                      description: 执行小组
                      type: array
                      items:
                        type: string
                    note:
                      type: string
                      description: 任务备注
                    start_ts:
                      description: 开始时间
                      type: integer
                      format: int64
                    end_ts:
                      description: 结束时间
                      type: integer
                      format: int64
      responses:
        200:
          description: 更新成功,返回项目href
          schema:
            $ref: '#/definitions/HrefObject'
        default:
          description: Error code definitions
          schema:
            $ref: '#/definitions/ErrorModel'
  /projects/{projectId}/judgement:
    post:
      tags:
        - project
        - finish
      summary: 项目数据更新:项目结项评审相关
      operationId: setProjectJudgement
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: projectId
          required: true
          type: string
        - in: query
          name: accessToken
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProjectJudgementModel'
      responses:
        200:
          description: 更新成功,返回项目href
          schema:
            $ref: '#/definitions/HrefObject'
        default:
          description: Error code definitions
          schema:
            $ref: '#/definitions/ErrorModel'
  /tasks:
    get:
      tags:
        - task
        - finish
      summary: 查询任务列表
      operationId: getAllTasks
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: accessToken
          type: string
          required: true
        - in: query
          name: filter
          type: string
          required: true
          description: |
            搜索结果过滤,格式为:
              key1::value1,key2::value2,keyN,valueN
            例如:
              office::001,work_type::3
            提供的过滤key有:
            1.status 任务状态为对应的值
            2.assign_to 负责人是此帐号id
            3.executors 执行人员有包含此帐号
            4.person  负责人或者执行人员包含此帐号id
            5.project 返回属于此project id下的任务
        - in: query
          name: sort
          type: string
          required: true
          description: |
            搜索结果排序
              降序为"create_ts::-1"
              升序为"create_ts::1"
        - in: query
          name: totalOnly
          type: integer
          required: true
          description: |
             当totalOnly为1时,仅返回搜索结果记录的条数,此时仅respond的total有效.
             当totalOnly为0时,返回实际的搜索结果数据.此时respond的total字段无效.
        - in: query
          name: offset
          required: true
          type: integer
          description: 设定搜索结果的起始偏移
        - in: query
          name: limit
          required: true
          type: integer
          description: 当limit>0可用于分页,返回一个页数据量.当limit为-1时返回所有数据
      responses:
        200:
          description: 搜索成功返回
          schema:
            type: object
            properties:
              total:
                type: integer
              offset:
                type: integer
              limit:
                type: integer
              tasks:
                description: 任务的href列表
                type: array
                items:
                  $ref: "#/definitions/TaskIndex"
  /tasks/{taskId}:
    get:
      tags:
        - task
        - finish
      summary: 查询任务信息
      operationId: getTask
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: taskId
          required: true
          type: string
        - in: query
          name: accessToken
          required: true
          type: string
      responses:
        200:
          description: 返回任务信息
          schema:
            $ref: '#/definitions/TaskModel'
        default:
          description: Error code definitions
          schema:
            $ref: '#/definitions/ErrorModel'

  /tasks/{taskId}/status:
    post:
      tags:
        - task
        - finish
      summary: "修改任务状态：0未完成；1已完成"
      operationId: setTaskStatus
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: taskId
          required: true
          type: string
        - in: query
          name: accessToken
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              status:
                type: integer
      responses:
        200:
          description: 返回任务href
          schema:
            $ref: '#/definitions/HrefObject'
        default:
            description: Error code definitions
            schema:
              $ref: '#/definitions/ErrorModel'
  /tasks/{taskId}/note:
    post:
      tags:
        - task
        - finish
      summary: 修改任务备注
      operationId: setTaskNote
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: taskId
          required: true
          type: string
        - in: query
          name: accessToken
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              note:
                type: string
      responses:
        200:
          description: 返回任务href
          schema:
            $ref: '#/definitions/HrefObject'
        default:
            description: Error code definitions
            schema:
              $ref: '#/definitions/ErrorModel'
  /tasks/{taskId}/report:
    post:
      tags:
        - task
        - finish
      summary: 更新任务报告
      operationId: setTaskReport
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: taskId
          required: true
          type: string
        - in: query
          name: accessToken
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              report_file:
                type: string
      responses:
        200:
          description: 返回任务href
          schema:
            $ref: '#/definitions/HrefObject'
        default:
            description: Error code definitions
            schema:
              $ref: '#/definitions/ErrorModel'
#  /organization:
#    get:
#      deprecated: true
#      tags:
#        - organization
#      summary: 查询组织架构，包括科室及职务
#      operationId: getOrganization
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: query
#          name: accessToken
#          required: true
#          type: string
#      responses:
#        200:
#          description: 返回组织架构信息
#          schema:
#            $ref: '#/definitions/OrganizationModel'
#        default:
#          description: Error code definitions
#          schema:
#            $ref: '#/definitions/ErrorModel'
  /offices:
    get:
      tags:
        - organization
        - finish
      summary: 查询办公室列表
      operationId: getAllOffices
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: accessToken
          required: true
          type: string
      responses:
        200:
          description: 返回所有办公室
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              titles:
                type: array
                items:
                  type: string
  /titles:
    get:
      tags:
        - organization
        - finish
      summary: 查询职务列表
      operationId: GetAllTitles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: accessToken
          required: true
          type: string
      responses:
        200:
          description: 返回职务列表
          schema:
            $ref: '#/definitions/TitleModel'
definitions:
  IdObject:
    type: object
    properties:
      id:
        type: string
  HrefObject:
    type: object
    required:
      - href
    properties:
      href:
        type: string
    example:
        href: "http://YOUR_HOUST/v1/PATH/DATA_ID"
  ProjectWorkType:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
  ProjectGetAllList:
    type: object
    required:
      - projects
    properties:
      total:
        type: integer
        description: 返回搜索结果的记录个数.此字段仅在totalOnly为1时有效
      offset:
        type: integer
      limit:
        type: integer
      projects:
        description: 请求数据的href列表,此字段仅在totalOnly为0时有效
        type: array
        items:
          $ref: '#/definitions/ProjectIndex'
  ProjectIndex:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      status:
        type: integer
      start_ts:
        type: integer
        format: int64
      end_ts:
        type: integer
        format: int64
      manager:
        type: string
      office:
        type: string
      work_type:
        type: integer
  ProjectStatus:
    type: object
    properties:
      status:
        description: |
          项目进度:
          * 1 申报评审
          * 2 项目启动
          * 3 项目督办
          * 4 项目结项
        type: integer
  ProjectApplicationModel:
    type: object
    properties:
      result:
        description: |
          立项评审结果
          0 待评审
          1 通过
          2 未通过
        type: integer
      leader:
        description: 立项评审负责人
        type: string
      members:
        description: '立项评审团人员'
        type: array
        items:
          type: string
      comment:
        description: '立项评审意见汇总'
        type: string
      application_file:
        description: '立项申请表'
        type: string
      report_file:
        description: 立项评审报告
        type: string
      approval_file:
        description: 立项批准书
        type: string
      review_ts:
        description: '立项评审时间'
        type: integer
        format: int64
  ProjectJudgementModel:
    type: object
    properties:
      result:
        description: |
          结项评审结果
          0 待评审
          1 通过
          2 未通过
        type: integer
      leader:
        description: '结项评审负责人'
        type: string
      members:
        description: '结项评审团人员'
        type: array
        items:
            type: string
      comment:
        description: '结项评审意见汇总'
        type: string
      report_file:
        description: '结项报告附件'
        type: string
      harvest:
        description: '项目成果'
        type: string
      harvest_file:
        description: '项目成果附件'
        type: string
      conclusion:
        description: '结项总结'
        type: string
      judge_file:
        description: '结项评审报告附件'
        type: string
      judge_ts:
        description: '结项评审时间'
        type: integer
        format: int64
      actual_ts:
        description: '实际结项时间'
        type: integer
        format: int64
  TaskModel:
    type: object
    properties:
      name:
        description: 任务名称
        type: string
      content:
        description: 任务描述
        type: string
      assign_to:
        description: 任务负责人
        type: string
      executors:
        description: 执行小组
        type: array
        items:
          type: string
      start_ts:
        description: 开始时间
        type: integer
        format: int64
      end_ts:
        description: 结束时间
        type: integer
        format: int64
      status:
        description: 任务状态：0未完成；1已完成
        type: integer
        format: int32
      note:
        type: string
      report_file:
        type: string
  TaskIndex:
    type: object
    properties:
      id:
        description: 任务id
        type: string
      name:
        description: 任务名称
        type: string
      content:
        description: 任务描述
        type: string
      assign_to:
        description: 任务负责人
        type: string
      executors:
        description: 执行小组
        type: array
        items:
          type: string
      start_ts:
        description: 开始时间
        type: integer
        format: int64
      end_ts:
        description: 结束时间
        type: integer
        format: int64
      status:
        description: 任务状态：0未完成；1已完成
        type: integer
        format: int32
      note:
        type: string
      report_file:
        type: string
  ProjectBasisModel:
    type: object
    properties:
      name:
        description: 项目名称
        type: string
      content:
        description: 项目内容
        type: string
      objective:
        description: 项目目标
        type: string
      manager:
        description: 项目负责人href
        type: string
      members:
        description: 项目成员href
        type: array
        items:
          type: string
      office:
        description: 办公室id
        type: string
      work_type:
        description: 工作类型id
        type: integer
      start_ts:
        description: 项目开始时间
        type: integer
        format: int64
      end_ts:
        description: 项目结束时间
        type: integer
        format: int64
      application_file:
        description: 申请材料
        type: string
  ProjectDetailModel:
    type: object
    properties:
      name:
        description: 项目名称
        type: string
      content:
        description: 项目内容
        type: string
      objective:
        description: 项目目标
        type: string
      manager:
        description: 项目负责人href
        type: string
      members:
        description: 项目成员href
        type: array
        items:
          type: string
      office:
        description: 办公室id
        type: string
      work_type:
        description: 工作类型id
        type: integer
      start_ts:
        description: 项目开始时间
        type: integer
        format: int64
      end_ts:
        description: 项目结束时间
        type: integer
        format: int64
      status:
        description: |
          项目进度:
          * 1 申报评审
          * 2 项目启动
          * 3 项目督办
          * 4 项目结项
        type: integer
      application:
        $ref: '#/definitions/ProjectApplicationModel'
      tasks:
        description: 项目下所有的任务href数组
        type: array
        items:
          type: string
      judge:
        $ref: '#/definitions/ProjectJudgementModel'
  AccountModel:
    type: object
    properties:
      user_name:
        description: 登录名
        type: string
      password:
        description: 密码
        type: string
      phone:
        description: 手机号
        type: string
      email:
        type: string
      create_ts:
        description: 注册时间
        type: integer
        format: int64
  StaffModel:
    type: object
    properties:
      name:
        description: 姓名
        type: string
      nick_name:
        description: 昵称
        type: string
      avatar:
        description: 头像
        type: string
      gender:
        description: "性别: 0-女,1-男"
        type: integer
      office:
        description: 科室id
        type: string
      titles:
        description: 职务id
        type: array
        items:
          type: string
      roles:
        type: array
        items:
          $ref: '#/definitions/RoleModel'
      id_card:
        description: 身份证
        type: string
      land_line:
        description: 座机
        type: string
      qq:
        type: string
      degree:
        description: 学历
        type: string
      college:
        description: 毕业院校
        type: string
      folk:
        description: 民族
        type: string
      paper:
        description: 论文
        type: string
      home_address:
        description: 家庭地址
        type: string
      contact_address:
        description: 通讯地址
        type: string
  TitleModel:
    type: object
    properties:
      id:
        type: string
      name:
        type: string

#  OrganizationModel:
#    type: object
#    properties:
#      offices:
#        type: array
#        items:
#          $ref: '#/definitions/OfficeModel'

  RoleModel:
    type: object
    required:
      - id
      - href
      - name
      - permissions
    properties:
      id:
        type: string
      href:
        type: string
      name:
        type: string
      display_name:
        type: string
      description:
        type: string
      permissions:
        type: array
        items:
          $ref: '#/definitions/PermissionModel'
  PermissionModel:
    type: object
    required:
      - id
      - href
      - name
      - action
    properties:
      id:
        type: string
      href:
        type: string
      name:
        type: string
      display_name:
        type: string
      description:
        type: string
      object_type:
        type: string
        description: "A string identifying the type of object this permission applies to"
      action:
        type: string
        description: "A string indicating the type of action this permission permits"
      instance:
        type: string
        description: 'A string containing the primary ID of the object instance this permission applies to, or "\*" indicating that it applies to all instances. If the given action does not allow instance specification, "\*" should always be used.'
  ErrorModel:
    type: object
    required:
      - status
      - code
    properties:
      status:
        type: integer
        description: "The corresponding HTTP status code"
      code:
        type: integer
        description: "An specific error code that can be used to obtain more information"
      message:
        type: string
        description: "A simple, easy to understand message that you can show directly to your application"
      message_ext:
        type: string
        description: "A clear, plain text explanation with technical details that might assist a developer calling the API"
    example:
      status: 501
      code: 10000
      message:  "Unexpected error"
      message_ext: ""
